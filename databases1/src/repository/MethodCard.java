/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package repository;

import javax.swing.table.DefaultTableModel;

/**
 * Finestra di dialogo per approfondire circa un metodo specifico
 * @author davso
 */
public class MethodCard extends javax.swing.JDialog {

    /**
     * Creates new form MethodCard
     * @param parent
     * @param modal
     */
    public MethodCard(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    void setMethodName(String name){
        methodNameLabel.setText(name);
    }
    /**
     * Metodo che restituisce visivamente le informazioni di un metodo
     * @param code Codice del descrittore metodo
     */
    void showInformations(String code){
        showMethodReleases(code);//Mostra le versioni a cui appartiene il metodo
        showMethodAuthors(code);//Mostra gli autori del metodo
        showMethodChanges(code);//Mostra i commit che riguardano il metodo
    }
    void showMethodReleases(String code){
        String query="SELECT M.CODM,R.VERSIONE,R.CODR,R.PATH,R.DATARILASCIO,"
                + "C.STATO FROM RELEASES R JOIN PACKAGES P "
                + "ON R.CODR=P.CODR JOIN CLASSE C ON P.CODP=C.CODP "
                + "JOIN METODO M ON C.CODC=M.CODC "
                + "WHERE M.CODDM='"+code+"'";
        DefaultTableModel model= (DefaultTableModel)jMethodReleasesTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);     
            
    }
    private void showMethodAuthors(String code){
        String query="SELECT A.* FROM AUTORE A JOIN SCRITTURAMETODO SM "
                + "ON A.CODA=SM.CODAUTORE WHERE SM.CODMETODO='"+code+"'";
        DefaultTableModel model= (DefaultTableModel)jMethodAuthorsTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);     
    }
    private void showMethodChanges(String code){
        String query="SELECT CL.CODL,CL.TIPOMODIFICA,CL.DESCRIZIONE,CL.DATAAPERTURA,"
                + "CL.DATACHIUSURA FROM DESCRITTORE_METODO DM JOIN METODO M ON "
                + "DM.CODDM=M.CODDM JOIN CHANGELOG CL ON M.CODM=CL.CODM WHERE DM.CODDM='"
                +code+"'";
        DefaultTableModel model= (DefaultTableModel)jMethodChangesTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        MethodCardTitlePanel = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        methodNameLabel = new java.awt.Label();
        MethodReleasesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jMethodReleasesTable = new javax.swing.JTable();
        MethodAuthorsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jMethodAuthorsTable = new javax.swing.JTable();
        MethodChangesPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jMethodChangesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1, 1));
        setPreferredSize(new java.awt.Dimension(1000, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1114, 975));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        MethodCardTitlePanel.setLayout(new java.awt.GridBagLayout());

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        label1.setText("Scheda Metodo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        MethodCardTitlePanel.add(label1, gridBagConstraints);

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        label2.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        MethodCardTitlePanel.add(label2, gridBagConstraints);

        methodNameLabel.setAlignment(java.awt.Label.CENTER);
        methodNameLabel.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        methodNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        MethodCardTitlePanel.add(methodNameLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanel2.add(MethodCardTitlePanel, gridBagConstraints);

        MethodReleasesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Presente nelle versioni"));
        MethodReleasesPanel.setMinimumSize(new java.awt.Dimension(100, 200));
        MethodReleasesPanel.setPreferredSize(new java.awt.Dimension(300, 200));
        MethodReleasesPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(800, 150));

        jMethodReleasesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nome Progetto", "Path", "Data Creazione", "Descrizione", "Data Cancellazione"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jMethodReleasesTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane2.setViewportView(jMethodReleasesTable);

        MethodReleasesPanel.add(jScrollPane2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(MethodReleasesPanel, gridBagConstraints);

        MethodAuthorsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Autori del metodo"));
        MethodAuthorsPanel.setMinimumSize(new java.awt.Dimension(100, 200));
        MethodAuthorsPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(800, 150));

        jMethodAuthorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jMethodAuthorsTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane3.setViewportView(jMethodAuthorsTable);

        MethodAuthorsPanel.add(jScrollPane3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(MethodAuthorsPanel, gridBagConstraints);

        MethodChangesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Storico cambiamenti"));
        MethodChangesPanel.setPreferredSize(new java.awt.Dimension(300, 200));
        MethodChangesPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane6.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(800, 150));

        jMethodChangesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jMethodChangesTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane6.setViewportView(jMethodChangesTable);

        MethodChangesPanel.add(jScrollPane6, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 100.0;
        jPanel2.add(MethodChangesPanel, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MethodAuthorsPanel;
    private javax.swing.JPanel MethodCardTitlePanel;
    private javax.swing.JPanel MethodChangesPanel;
    private javax.swing.JPanel MethodReleasesPanel;
    private javax.swing.JTable jMethodAuthorsTable;
    private javax.swing.JTable jMethodChangesTable;
    private javax.swing.JTable jMethodReleasesTable;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label methodNameLabel;
    // End of variables declaration//GEN-END:variables
}
