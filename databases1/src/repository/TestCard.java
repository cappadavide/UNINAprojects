/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package repository;

import javax.swing.table.DefaultTableModel;

/**
 * Finestra di dialogo per approfondire circa un test
 * @author davso
 */
public class TestCard extends javax.swing.JDialog {

    /**
     * Creates new form TestCard
     * @param parent
     * @param modal
     */
    public TestCard(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    void setTestName(String name){
        testNameLabel.setText(name);
    }
    /**
     * Metodo che restituisce visivamente le informazioni di un test
     * @param code Codice del test
     */
    void showInformations(String code){
        showTestExecutions(code);//Mostra le esecuzioni del test e il loro esito
        showTestAuthors(code);//Mostra gli autori del test
        showTestedClasses(code);//Mostra le classi che il test testa
        showTestedMethods(code);//Mostra i metodi che il test testa
    }
    
    private void showTestExecutions(String code){
        String query="SELECT E.CODE,R.VERSIONE,E.ESITO,E.DATAESECUZIONE"
                + " FROM RELEASES R JOIN ESECUZIONI E "
                + "ON R.CODR=E.CODRELEASETESTATA WHERE E.TESTESEGUITO='"+code+"'";
        DefaultTableModel model= (DefaultTableModel)jTestExecutionsTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);    
    }
    private void showTestedClasses(String code){
        String query="SELECT DC.*"
                + " FROM DESCRITTORE_CLASSE DC JOIN TEST_CLASSI TC "
                + "ON DC.CODDC=TC.CODCLASSE WHERE TC.CODTEST='"+code+"'";
        DefaultTableModel model= (DefaultTableModel)jTestedClassesTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);   
    }
    private void showTestedMethods(String code){
        String query="SELECT DM.*"
                + " FROM DESCRITTORE_METODO DM JOIN TEST_METODI TM "
                + "ON DM.CODDM=TM.CODMETODO WHERE TM.CODTEST='"+code+"'";
        DefaultTableModel model= (DefaultTableModel)jTestedMethodsTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);    
    }
    private void showTestAuthors(String code){
        String query="SELECT A.* FROM AUTORE A JOIN SCRITTURAMETODO SM "
                + "ON A.CODA=SM.CODAUTORE WHERE SM.CODMETODO='"+code+"'";
        DefaultTableModel model= (DefaultTableModel)jTestAuthorsTable.getModel();
        TableManager tm=new TableManager();
        tm.buildRowsCard(model,query,this);   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        TestCardTitlePanel = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        testNameLabel = new java.awt.Label();
        TestExecutionsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTestExecutionsTable = new javax.swing.JTable();
        TestedClassesPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTestedClassesTable = new javax.swing.JTable();
        TestedMethodsPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTestedMethodsTable = new javax.swing.JTable();
        TestAuthorsPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTestAuthorsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1, 1));
        setPreferredSize(new java.awt.Dimension(1000, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1114, 975));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        TestCardTitlePanel.setLayout(new java.awt.GridBagLayout());

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        label1.setText("Scheda Test");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        TestCardTitlePanel.add(label1, gridBagConstraints);

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        label2.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        TestCardTitlePanel.add(label2, gridBagConstraints);

        testNameLabel.setAlignment(java.awt.Label.CENTER);
        testNameLabel.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        testNameLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        TestCardTitlePanel.add(testNameLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanel2.add(TestCardTitlePanel, gridBagConstraints);

        TestExecutionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Esecuzioni del test"));
        TestExecutionsPanel.setMinimumSize(new java.awt.Dimension(100, 200));
        TestExecutionsPanel.setPreferredSize(new java.awt.Dimension(300, 200));
        TestExecutionsPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(800, 150));

        jTestExecutionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nome Progetto", "Path", "Data Creazione", "Descrizione", "Data Cancellazione"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jTestExecutionsTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane2.setViewportView(jTestExecutionsTable);

        TestExecutionsPanel.add(jScrollPane2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(TestExecutionsPanel, gridBagConstraints);

        TestedClassesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Classi testate"));
        TestedClassesPanel.setMinimumSize(new java.awt.Dimension(100, 200));
        TestedClassesPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(800, 150));

        jTestedClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jTestedClassesTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane3.setViewportView(jTestedClassesTable);

        TestedClassesPanel.add(jScrollPane3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(TestedClassesPanel, gridBagConstraints);

        TestedMethodsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Metodi testati"));
        TestedMethodsPanel.setMinimumSize(new java.awt.Dimension(100, 200));
        TestedMethodsPanel.setPreferredSize(new java.awt.Dimension(100, 200));
        TestedMethodsPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane4.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(800, 150));

        jTestedMethodsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jTestedMethodsTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane4.setViewportView(jTestedMethodsTable);

        TestedMethodsPanel.add(jScrollPane4, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 100.0;
        jPanel2.add(TestedMethodsPanel, gridBagConstraints);

        TestAuthorsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Autori test"));
        TestAuthorsPanel.setPreferredSize(new java.awt.Dimension(300, 200));
        TestAuthorsPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane5.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPane5.setPreferredSize(new java.awt.Dimension(800, 150));

        jTestAuthorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ){public boolean isCellEditable(int row, int column){return false;}});
        jTestAuthorsTable.setPreferredSize(new java.awt.Dimension(700, 400));
        jScrollPane5.setViewportView(jTestAuthorsTable);

        TestAuthorsPanel.add(jScrollPane5, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(TestAuthorsPanel, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TestAuthorsPanel;
    private javax.swing.JPanel TestCardTitlePanel;
    private javax.swing.JPanel TestExecutionsPanel;
    private javax.swing.JPanel TestedClassesPanel;
    private javax.swing.JPanel TestedMethodsPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTestAuthorsTable;
    private javax.swing.JTable jTestExecutionsTable;
    private javax.swing.JTable jTestedClassesTable;
    private javax.swing.JTable jTestedMethodsTable;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label testNameLabel;
    // End of variables declaration//GEN-END:variables
}
